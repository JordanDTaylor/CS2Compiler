//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Ming Slogar/Downloads/CS2Compiler-master\CS2.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CS2Parser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public interface ICS2Visitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] CS2Parser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] CS2Parser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.function_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_declaration([NotNull] CS2Parser.Function_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.mod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMod([NotNull] CS2Parser.ModContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] CS2Parser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_statement([NotNull] CS2Parser.Return_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] CS2Parser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_statement([NotNull] CS2Parser.If_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_loop([NotNull] CS2Parser.For_loopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_loop([NotNull] CS2Parser.While_loopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter_list([NotNull] CS2Parser.Parameter_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] CS2Parser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] CS2Parser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.evaluatable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEvaluatable([NotNull] CS2Parser.EvaluatableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperation([NotNull] CS2Parser.OperationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.unary_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary_operation([NotNull] CS2Parser.Unary_operationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.relational_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelational_operation([NotNull] CS2Parser.Relational_operationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelop([NotNull] CS2Parser.RelopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] CS2Parser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.multiplyingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplyingExpression([NotNull] CS2Parser.MultiplyingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtom([NotNull] CS2Parser.AtomContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] CS2Parser.ConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.char_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitChar_constant([NotNull] CS2Parser.Char_constantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.string_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString_constant([NotNull] CS2Parser.String_constantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_call([NotNull] CS2Parser.Function_callContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] CS2Parser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.pre_unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPre_unary_operator([NotNull] CS2Parser.Pre_unary_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.post_unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPost_unary_operator([NotNull] CS2Parser.Post_unary_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] CS2Parser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CS2Parser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayType([NotNull] CS2Parser.ArrayTypeContext context);
}
