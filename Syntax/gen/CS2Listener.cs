//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Ming Slogar/Downloads/CS2Compiler-master\CS2.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CS2Parser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public interface ICS2Listener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] CS2Parser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] CS2Parser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] CS2Parser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] CS2Parser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.function_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_declaration([NotNull] CS2Parser.Function_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.function_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_declaration([NotNull] CS2Parser.Function_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.mod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMod([NotNull] CS2Parser.ModContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.mod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMod([NotNull] CS2Parser.ModContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CS2Parser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CS2Parser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] CS2Parser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] CS2Parser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] CS2Parser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] CS2Parser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] CS2Parser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] CS2Parser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_loop([NotNull] CS2Parser.For_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_loop([NotNull] CS2Parser.For_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_loop([NotNull] CS2Parser.While_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_loop([NotNull] CS2Parser.While_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter_list([NotNull] CS2Parser.Parameter_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter_list([NotNull] CS2Parser.Parameter_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] CS2Parser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] CS2Parser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] CS2Parser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] CS2Parser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.evaluatable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvaluatable([NotNull] CS2Parser.EvaluatableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.evaluatable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvaluatable([NotNull] CS2Parser.EvaluatableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperation([NotNull] CS2Parser.OperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperation([NotNull] CS2Parser.OperationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.unary_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_operation([NotNull] CS2Parser.Unary_operationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.unary_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_operation([NotNull] CS2Parser.Unary_operationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.relational_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelational_operation([NotNull] CS2Parser.Relational_operationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.relational_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelational_operation([NotNull] CS2Parser.Relational_operationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] CS2Parser.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] CS2Parser.RelopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CS2Parser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CS2Parser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.multiplyingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplyingExpression([NotNull] CS2Parser.MultiplyingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.multiplyingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplyingExpression([NotNull] CS2Parser.MultiplyingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] CS2Parser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] CS2Parser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] CS2Parser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] CS2Parser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.char_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChar_constant([NotNull] CS2Parser.Char_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.char_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChar_constant([NotNull] CS2Parser.Char_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.string_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_constant([NotNull] CS2Parser.String_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.string_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_constant([NotNull] CS2Parser.String_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_call([NotNull] CS2Parser.Function_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_call([NotNull] CS2Parser.Function_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] CS2Parser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] CS2Parser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.pre_unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPre_unary_operator([NotNull] CS2Parser.Pre_unary_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.pre_unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPre_unary_operator([NotNull] CS2Parser.Pre_unary_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.post_unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPost_unary_operator([NotNull] CS2Parser.Post_unary_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.post_unary_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPost_unary_operator([NotNull] CS2Parser.Post_unary_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] CS2Parser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] CS2Parser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayType([NotNull] CS2Parser.ArrayTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayType([NotNull] CS2Parser.ArrayTypeContext context);
}
