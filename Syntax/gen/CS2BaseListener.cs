//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Ming Slogar/Downloads/CS2Compiler-master\CS2.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICS2Listener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public partial class CS2BaseListener : ICS2Listener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] CS2Parser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] CS2Parser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] CS2Parser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] CS2Parser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.function_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_declaration([NotNull] CS2Parser.Function_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.function_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_declaration([NotNull] CS2Parser.Function_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.mod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMod([NotNull] CS2Parser.ModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.mod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMod([NotNull] CS2Parser.ModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CS2Parser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CS2Parser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_statement([NotNull] CS2Parser.Return_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_statement([NotNull] CS2Parser.Return_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] CS2Parser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] CS2Parser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] CS2Parser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] CS2Parser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_loop([NotNull] CS2Parser.For_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_loop([NotNull] CS2Parser.For_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_loop([NotNull] CS2Parser.While_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_loop([NotNull] CS2Parser.While_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_list([NotNull] CS2Parser.Parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_list([NotNull] CS2Parser.Parameter_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] CS2Parser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] CS2Parser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] CS2Parser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] CS2Parser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.evaluatable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvaluatable([NotNull] CS2Parser.EvaluatableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.evaluatable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvaluatable([NotNull] CS2Parser.EvaluatableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperation([NotNull] CS2Parser.OperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperation([NotNull] CS2Parser.OperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.unary_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_operation([NotNull] CS2Parser.Unary_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.unary_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_operation([NotNull] CS2Parser.Unary_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.relational_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_operation([NotNull] CS2Parser.Relational_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.relational_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_operation([NotNull] CS2Parser.Relational_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelop([NotNull] CS2Parser.RelopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.relop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelop([NotNull] CS2Parser.RelopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] CS2Parser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] CS2Parser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.multiplyingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplyingExpression([NotNull] CS2Parser.MultiplyingExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.multiplyingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplyingExpression([NotNull] CS2Parser.MultiplyingExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] CS2Parser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] CS2Parser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] CS2Parser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] CS2Parser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.char_constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChar_constant([NotNull] CS2Parser.Char_constantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.char_constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChar_constant([NotNull] CS2Parser.Char_constantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.string_constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_constant([NotNull] CS2Parser.String_constantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.string_constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_constant([NotNull] CS2Parser.String_constantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call([NotNull] CS2Parser.Function_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call([NotNull] CS2Parser.Function_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] CS2Parser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] CS2Parser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.pre_unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPre_unary_operator([NotNull] CS2Parser.Pre_unary_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.pre_unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPre_unary_operator([NotNull] CS2Parser.Pre_unary_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.post_unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPost_unary_operator([NotNull] CS2Parser.Post_unary_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.post_unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPost_unary_operator([NotNull] CS2Parser.Post_unary_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] CS2Parser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] CS2Parser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CS2Parser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] CS2Parser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CS2Parser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] CS2Parser.ArrayTypeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
